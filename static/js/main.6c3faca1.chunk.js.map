{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["card","name","email","id","className","src","alt","CardList","robots","map","robot","Card","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACI,6BAAKL,IACL,4BAAIC,WCeLK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,mCAEQA,EAAOC,KAAI,SAAAC,GACP,OACI,cAACC,EAAD,CAEIR,GAAIO,EAAMP,GACVF,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,OAHRQ,EAAMP,UCGxBS,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCiBJC,E,kDAnBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAKX,MAAMK,a,GAhBCQ,aC+CZC,G,wDAzCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACTjB,OAAQ,GACR2B,YAAa,IAJP,E,gEAQO,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEtB,OAAQkC,S,+BAOrC,IAAD,EAC2Bb,KAAKJ,MAA7BjB,EADH,EACGA,OAAQ2B,EADX,EACWA,YACVQ,EAAiBnC,EAAOoC,QAAO,SAAAlC,GACjC,OAAOA,EAAMT,KAAK4C,cAAcC,SAASX,EAAYU,kBAEzD,OAAMrC,EAAOuC,OAIL,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQmC,WAR3B,oBAAIvC,UAAU,SAAd,yB,GAzBD2B,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6c3faca1.chunk.js","sourcesContent":["// import React from 'react';\r\n\r\nconst card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?200X200`} alt='robot' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default card;","// import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <>\r\n            {\r\n                robots.map(robot => {\r\n                    return (\r\n                        <Card\r\n                            key={robot.id}\r\n                            id={robot.id}\r\n                            name={robot.name}\r\n                            email={robot.email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default CardList;","// import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\"\r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","// import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: \"5px solid black\", height: '400px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooops. that is not good</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        if (!(robots.length)) {\r\n            return <h1 className='tc pa5'>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className='tc' >\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div >\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./containers/App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}